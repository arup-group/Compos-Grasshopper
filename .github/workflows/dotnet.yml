name: Build and Test

on: push

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Download Compos
      run: |
        gh release download compos8.6.0.7 --pattern "Arup_Compos_x64_8_6_0_7.exe" --repo arup-group/oasys-combined
      env:
        GH_TOKEN: ${{ secrets.GH_PAT }}

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1

    - name: Restore NuGet packages
      run: nuget restore ComposGH.sln
      
    - name: Install Compos
      run: |
        $installerPath = $(ls -r ${{env.GITHUB_WORKSPACE}}\Arup_Compos_x64_8_6_0_7.msi)
        Write-output "Installer Path: ${installerPath}"
        $app = Start-Process ${installerPath} -ArgumentList '/passive /quiet /l* msiLog.txt' -PassThru -Wait
        $app.WaitForExit()
        Write-Output "Exit code: $($app.ExitCode)"
        Write-Output "Exit time: $($app.ExitTime.ToUniversalTime().ToString('yyyy-MM-dd HH:mm:ss')) UTC"
        if ($app.ExitCode -ne 0) {
          Write-Error "Application could not be installed. Error code $($app.ExitCode)"
          exit(1)
        }
        
    - name: Register Compos
      run: |
        & 'C:\Program Files\Oasys\Compos 8.6\Compos.exe' /register
        
    - name: Build
      run: msbuild /m /p:Configuration=Release ComposGH.sln

    - name: Run Tests
      run: |
        & 'C:\Program Files\Oasys\Compos 8.6\Compos.exe' /Register
        dotnet test .\ComposTests\bin\Release\net6.0\ComposAPITests.dll

    - name: Code Coverage
      run: msbuild .\ComposTests\ComposAPITests.csproj ComposAPITests.csproj /t:InstrumentModules /t:GenerateCoverageResult /p:CollectCoverage=true /p:CoverletOutputForm=cobertura

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        directory: ./coverage/reports/
        fail_ci_if_error: false
        files: ComposTests/coverage.json
        flags: unittests
        name: codecov-umbrella
        path_to_write_report: ./coverage/codecov_report.txt
        verbose: true

    - name: Upload coverage files
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: |
          ComposTests/coverage.json


